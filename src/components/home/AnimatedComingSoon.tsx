import '../../styles/AnimatedSvg.css';

interface AnimatedComingSoonProps {
  shouldAnimate: boolean;
}

const AnimatedComingSoon = ({ shouldAnimate }: AnimatedComingSoonProps) => {
  // Helper function to extract x position from path data
  const getXPosition = (d: string): number => {
    const match = d.match(/M\s*([0-9.]+)/);
    return match ? parseFloat(match[1]) : 0;
  };

  // Calculate animation delay based on x position
  const getAnimationDelay = (d: string): number => {
    const x = getXPosition(d);
    // Map x position (0-941) to delay (0-1.5s)
    return (x / 1000) * 3;
  };

  return (
    <svg className="animated-svg" viewBox="0 0 941 306" fill="none" xmlns="http://www.w3.org/2000/svg">
      {[
        "M347.725 152.665C343.783 149.162 333.492 173.087 332.587 176.625C331.607 180.453 326.882 192.668 332.151 195.302C345.714 202.083 364.917 209.664 380.07 204.613",
        "M398.01 194.257C393.781 194.257 386.337 195.737 382.927 192.623C377.476 187.646 379.241 175.415 379.387 168.991C379.539 162.337 382.149 152.242 390.169 151.239C395.191 150.611 399.335 151.005 402.693 155.051C410.448 164.392 410.477 179.477 403.891 189.356",
        "M419.276 184.03C419.276 176.93 419.842 142.869 433.978 153.863C438.93 157.715 442.85 163.291 446.502 168.348C448.662 171.338 448.449 171.819 448.734 167.259C449.061 162.03 452.606 143.409 460.442 143.844C466.961 144.206 474.226 161.86 475.144 167.368",
        "M482.005 167.368C482.005 161.102 478.684 137.157 485.926 134.26C489.728 132.739 496.806 145.21 498.232 147.329C499.489 149.197 502.996 157.625 505.529 158.329C508.899 159.265 512.86 122.821 521.211 123.261C526.416 123.535 531.885 137.698 533.953 141.23C538.38 148.792 542.461 156.293 545.715 164.427",
        "M555.516 128.162V157.566",
        "M555.516 128.162V127.182",
        "M555.516 102.678V106.598",
        "M575.119 147.765C575.119 137.871 578.81 120.321 590.802 120.321C598.696 120.321 602.564 133.525 602.564 139.924",
        "M615.305 135.023C615.305 132.163 615.196 129.278 615.305 126.419C615.399 123.975 619.512 121.906 621.186 120.321C624.108 117.552 627.612 117.925 630.498 120.811C634.245 124.558 632.18 130.795 627.993 132.627C624.723 134.058 620.953 134.776 617.865 136.439C615.49 137.717 615.08 135.89 613.345 135.023",
        "M630.008 124.241C630.008 144.46 630.129 164.683 630.008 184.901C629.943 195.756 628.832 199.81 619.226 204.613",
        "M710.38 89.9359C701.621 89.9359 687.037 100.961 686.856 110.519C686.801 113.456 685.761 119.159 687.401 121.736C689.117 124.433 693.821 125.722 696.44 127.182C703.531 131.134 711.108 134.76 711.36 143.844C711.603 152.603 705.407 154.172 698.618 157.566",
        "M728.023 157.566C720.201 156.002 721.745 143.938 722.142 138.181C722.527 132.591 733.549 130.122 737.824 130.122C744.797 130.122 749.477 139.986 749.477 146.294C749.477 150.253 742.238 154.132 739.784 156.586C736.785 159.585 734.315 161.913 730.963 164.427",
        "M756.447 163.447C756.447 154.824 757.548 146.664 764.07 140.141C767.744 136.468 775.856 137.139 778.228 141.884C779.818 145.063 781.98 153.279 778.555 155.824C774.465 158.862 765.692 162.467 760.368 162.467",
        "M786.832 153.646C786.832 145.774 790.78 136.495 799.574 136.983C806.167 137.349 808.754 149.823 810.355 154.626",
        "M845.641 85.0351V153.646",
        "M834.859 102.678H869.164",
        "M884.847 143.844C880.2 143.328 876.616 133.681 875.263 130.122C873.602 125.755 872.726 121.287 873.085 116.618C873.694 108.702 890.645 108.225 895.029 111.935C899.554 115.764 898.633 128.096 897.098 133.008C895.493 138.146 891.338 141.273 887.787 144.824",
        "M302.839 177.597C301.723 182.619 290.125 187.63 286.392 189.595C263.922 201.422 239.87 210.241 214.944 215.209C175.9 222.989 132.498 225.537 94.1564 213.591C80.3077 209.276 67.6106 203.344 58.7019 192.156C55.2873 187.868 49.7405 176.384 43.1991 176.384",
        "M67.4645 171.531C79.0304 183.097 91.8558 200.649 110.064 200.649C134.458 200.649 160.038 202.918 184.208 199.436C204.323 196.538 224.629 197.097 244.602 193.976C250.666 193.029 256.057 191.889 261.588 189.123C265.175 187.33 268.122 184.036 271.294 182.45",
        "M42.7062 247.886C44.6828 249.122 43.9194 239.786 43.9194 238.854C43.9194 227.014 43.9194 215.173 43.9194 203.332C43.9194 198.162 40.4563 178.304 46.8852 175.09C58.1498 169.458 73.823 164.781 86.3165 164.238C104.712 163.438 122.057 170.187 139.768 173.877"
      ].map((d, i) => (
        <path
          key={i}
          className={`path ${shouldAnimate ? 'animate' : ''}`}
          d={d}
          style={{ animationDelay: `${getAnimationDelay(d)}s` }}
        />
      ))}
    </svg>
  );
};

export default AnimatedComingSoon; 